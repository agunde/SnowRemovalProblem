package evolutionaryAlgorithm;


public class Main {
	int[][] graph30 = {{0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,0,4,-1,-1,3,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0},
		{-1,4,0,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1},
		{-1,-1,5,-1,0,4,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,3,-1,-1,4,0,2,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,2,0,-1,-1,-1,3,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,4,-1,0,-1,1,-1,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,0,5,-1,5,-1,-1,-1,7,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,6,-1,-1,-1,-1,-1,1,5,0,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,4,-1,3,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,4,3,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,0,4,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,4,0,4,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,6,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,6,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,0,3,-1,-1,-1,4,4,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,3,0,5,-1,5,-1,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,5,0,4,-1,-1,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,6,-1,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,6,0,5,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,0,-1,-1,4,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,0,5,5,-1,-1},
		{-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,0,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,0,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0}};

	int[][] sw30 = {{0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,0,6,-1,-1,4,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0},
		{-1,6,0,5,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,-1,-1,-1},
		{-1,-1,5,-1,0,4,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,4,-1,-1,6,0,2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,2,0,-1,-1,-1,5,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,6,-1,0,-1,3,-1,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,5,-1,-1,-1,7,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,7,-1,-1,-1,-1,-1,1,7,0,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,6,-1,5,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,-1,7,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,5,3,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,6,0,-1,-1,-1,-1,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,0,4,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,4,0,4,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,6,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,6,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,10,-1,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,0,3,-1,-1,-1,4,6,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,3,0,5,-1,5,-1,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,5,0,4,-1,-1,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,6,-1,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,6,0,5,-1,-1,-1,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,7,0,-1,-1,4,-1,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,0,7,5,-1,-1},
		{-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,8,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,5,-1,0,7,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,7,0,-1},
		{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0}};

	int[][] graph11 ={{-1,	0,	-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1},
			{-1,	-1,	4,	-1,	-1,	3,	-1,	-1,	-1,	6,	0},
			{-1,	4,	-1,	-1,	5,	-1,	-1,	-1,	-1,	-1,	-1},
			{-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1},
			{-1,	-1,	5,	-1,	-1,	4,	-1,	-1,	-1,	-1,	-1},
			{-1,	3,	-1,	-1,	4,	-1,	2,	4,	-1,	-1,	-1},
			{-1,	-1,	-1,	-1,	-1,	2,	-1,	3,	-1,	-1,	-1},
			{-1,	-1,	-1,	-1,	-1,	4,	3,	-1,	4,	1,	-1},
			{-1,	-1,	-1,	-1,	-1,	-1,	-1,	4,	-1,	4,	-1},
			{-1,	6,	-1,	-1,	-1,	-1,	-1,	1,	4,	-1,	-1},
			{-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1}};

	int[][] sw11 ={{-1,	0,	-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1},
			{-1,	-1,	4,	-1,	-1,	3,	-1,	-1,	-1,	6,	0},
			{-1,	4,	-1,	5,	5,	-1,	-1,	-1,	-1,	-1,	-1},
			{-1,	-1,	5,	-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1},
			{-1,	-1,	5,	-1,	-1,	6,	-1,	-1,	-1,	-1,	-1},
			{-1,	3,	-1,	-1,	-1,	-1,	2,	6,	-1,	-1,	-1},
			{-1,	-1,	-1,	-1,	-1,	2,	-1,	3,	-1,	-1,	-1},
			{-1,	-1,	-1,	-1,	-1,	6,	3,	-1,	4,	1,	-1},
			{-1,	-1,	-1,	-1,	-1,	-1,	-1,	4,	-1,	5,	-1},
			{-1,	6,	-1,	-1,	-1,	-1,	-1,	3,	5,	-1,	-1},
			{-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1}};

	int[][] graph15 = {{0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
			{-1,0,4,-1,-1,3,-1,-1,-1,6,-1,-1,-1,-1,0},
			{-1,4,0,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
			{-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
			{-1,-1,5,-1,0,4,-1,-1,-1,-1,4,-1,-1,-1,-1},
			{-1,3,-1,-1,4,0,2,4,-1,-1,-1,-1,-1,-1,-1},
			{-1,-1,-1,-1,-1,2,0,3,-1,-1,3,-1,4,-1,-1},
			{-1,-1,-1,-1,-1,4,3,0,4,1,-1,2,-1,-1,-1},
			{-1,-1,-1,-1,-1,-1,-1,4,0,4,-1,5,-1,-1,-1},
			{-1,6,-1,-1,-1,-1,-1,1,4,0,-1,-1,-1,-1,-1},
			{-1,-1,-1,-1,4,-1,3,-1,-1,-1,0,-1,-1,-1,-1},
			{-1,-1,-1,-1,-1,-1,-1,2,5,-1,-1,0,6,-1,-1},
			{-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,6,0,-1,-1},
			{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1},
			{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0}};

	int[][] sw15 = {{0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
			{-1,0,6,-1,-1,4,-1,-1,-1,6,-1,-1,-1,-1,0},
			{-1,6,0,5,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
			{-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
			{-1,-1,5,-1,0,6,-1,-1,-1,-1,6,-1,-1,-1,-1},
			{-1,4,-1,-1,4,0,2,6,-1,-1,-1,-1,-1,-1,-1},
			{-1,-1,-1,-1,-1,2,0,3,-1,-1,5,-1,5,-1,-1},
			{-1,-1,-1,-1,-1,6,3,0,4,3,-1,2,-1,-1,-1},
			{-1,-1,-1,-1,-1,-1,-1,4,0,5,-1,5,-1,-1,-1},
			{-1,6,-1,-1,-1,-1,-1,1,5,0,-1,-1,-1,-1,-1},
			{-1,-1,-1,-1,6,-1,5,-1,-1,-1,0,-1,-1,-1,-1},
			{-1,-1,-1,-1,-1,-1,-1,2,5,-1,-1,0,8,9,-1},
			{-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,8,0,10,-1},
			{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,10,0,-1},
			{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0}};


	public static void main(String[] args) {
		Main main = new Main();
		EvolutionaryAlgorithm ea = new EvolutionaryAlgorithm(main.graph15, main.sw15,0,2,2);
		ea.run();
	}
}
