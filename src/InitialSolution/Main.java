package InitialSolution;

/**
 * Created by Magnu on 18.12.2016.
 */
public class Main {
    public Algorithm algorithm;
    public long startTime;

    public Main(String testSet){
        if(testSet.equals("testcase11")){
            startTime = System.currentTimeMillis();
            algorithm = new Algorithm(graph7,sw7,0,1,1);
            System.out.println("Hele algoritmen tar: " + ((System.currentTimeMillis()-startTime)/1000) + " sekunder");
        }

        if(testSet.equals("testcase12")){
            startTime = System.currentTimeMillis();
            algorithm = new Algorithm(graph7,sw7,0,2,1);
            System.out.println("Hele algoritmen tar: " + ((System.currentTimeMillis()-startTime)/1000) + " sekunder");
        }


        if(testSet.equals("testcase13")){
            startTime = System.currentTimeMillis();
            algorithm = new Algorithm(graph11,sw11,0,2,1);
            System.out.println("Hele algoritmen tar: " + ((System.currentTimeMillis()-startTime)/1000) + " sekunder");
        }

        if(testSet.equals("testcase14")){
            startTime = System.currentTimeMillis();
            algorithm = new Algorithm(graph11,sw11,0,2,2);
            System.out.println("Hele algoritmen tar: " + ((System.currentTimeMillis()-startTime)/1000) + " sekunder");
        }

        if(testSet.equals("testcase15")){
            startTime = System.currentTimeMillis();
            algorithm = new Algorithm(graph15,sw15,0,2,2);
            System.out.println("Hele algoritmen tar: " + ((System.currentTimeMillis()-startTime)/1000) + " sekunder");
        }

        if(testSet.equals("testcase16")){
            startTime = System.currentTimeMillis();
            algorithm = new Algorithm(graph15,sw15,0,3,2);
            System.out.println("Hele algoritmen tar: " + ((System.currentTimeMillis()-startTime)/1000) + " sekunder");
        }

        if(testSet.equals("testcase17")){
            startTime = System.currentTimeMillis();
            algorithm = new Algorithm(graph20,sw20,0,2,2);
            System.out.println("Hele algoritmen tar: " + ((System.currentTimeMillis()-startTime)/1000) + " sekunder");
        }

        if(testSet.equals("testcase18")){
            startTime = System.currentTimeMillis();
            algorithm = new Algorithm(graph20,sw20,0,3,3);
            System.out.println("Hele algoritmen tar: " + ((System.currentTimeMillis()-startTime)/1000) + " sekunder");
        }

        if(testSet.equals("testcase19")){
            startTime = System.currentTimeMillis();
            algorithm = new Algorithm(graph30,sw30,0,2,2);
            System.out.println("Hele algoritmen tar: " + ((System.currentTimeMillis()-startTime)/1000) + " sekunder");
        }

        if(testSet.equals("testcase20")){
            startTime = System.currentTimeMillis();
            algorithm = new Algorithm(graph30,sw30,0,3,2);
            System.out.println("Hele algoritmen tar: " + ((System.currentTimeMillis()-startTime)/1000) + " sekunder");
        }

        if(testSet.equals("testcase21")){
            startTime = System.currentTimeMillis();
            algorithm = new Algorithm(graph30,sw30,0,4,2);
            System.out.println("Hele algoritmen tar: " + ((System.currentTimeMillis()-startTime)/1000) + " sekunder");
        }

        if(testSet.equals("testcase22")){
            startTime = System.currentTimeMillis();
            algorithm = new Algorithm(graph40,sw40,0,3,2);
            System.out.println("Hele algoritmen tar: " + ((System.currentTimeMillis()-startTime)/1000) + " sekunder");
        }

        if(testSet.equals("testcase23")){
            startTime = System.currentTimeMillis();
            algorithm = new Algorithm(graph40,sw40,0,3,3);
            System.out.println("Hele algoritmen tar: " + ((System.currentTimeMillis()-startTime)/1000) + " sekunder");
        }

        if(testSet.equals("testcase24")){
            startTime = System.currentTimeMillis();
            algorithm = new Algorithm(graph40,sw40,0,4,2);
            System.out.println("Hele algoritmen tar: " + ((System.currentTimeMillis()-startTime)/1000) + " sekunder");
        }

        if(testSet.equals("testcase25")){
            startTime = System.currentTimeMillis();
            algorithm = new Algorithm(graph40,sw40,0,4,3);
            System.out.println("Hele algoritmen tar: " + ((System.currentTimeMillis()-startTime)/1000) + " sekunder");
        }

        if(testSet.equals("testcase26")){
            startTime = System.currentTimeMillis();
           algorithm = new Algorithm(Nodes60.graph60,Nodes60.sw60,0,2,2);
            System.out.println("Hele algoritmen tar: " + ((System.currentTimeMillis()-startTime)/1000) + " sekunder");
        }

        if(testSet.equals("testcase27")){
            startTime = System.currentTimeMillis();
            algorithm = new Algorithm(Nodes60.graph60,Nodes60.sw60,0,4,3);
            System.out.println("Hele algoritmen tar: " + ((System.currentTimeMillis()-startTime)/1000) + " sekunder");
        }

        if(testSet.equals("testcase28")){
            startTime = System.currentTimeMillis();
            algorithm = new Algorithm(Nodes60.graph60,Nodes60.sw60,0,5,4);
            System.out.println("Hele algoritmen tar: " + ((System.currentTimeMillis()-startTime)/1000) + " sekunder");
        }
    }

    int[][] graph7 ={{-1,	0,	-1,	-1,	-1,	-1,	-1},
            {-1,	-1,	3,	-1,	6,	-1,	0},
            {-1,	3,	-1,	4,	-1,	2,	-1},
            {-1,	-1,	4,	-1,	1,	3,	-1},
            {-1,	6,	-1,	1,	-1,	-1,	-1},
            {-1,	-1,	2,	3,	-1,	-1,	-1},
            {-1,	-1,	-1,	-1,	-1,	-1,	-1}};

    int[][] sw7 ={{-1,	0,	-1,	-1,	-1,	-1,	-1},
            {-1,	-1,	3,	-1,	6,	-1,	0},
            {-1,	3,	-1,	6,	-1,	2,	-1},
            {-1,	-1,	6,	-1,	3,	3,	-1},
            {-1,	6,	-1,	1,	-1,	-1,	-1},
            {-1,	-1,	2,	3,	-1,	-1,	-1},
            {-1,	-1,	-1,	-1,	-1,	-1,	-1}};

    int[][] graph11 ={{-1,	0,	-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1},
            {-1,	-1,	4,	-1,	-1,	3,	-1,	-1,	-1,	6,	0},
            {-1,	4,	-1,	-1,	5,	-1,	-1,	-1,	-1,	-1,	-1},
            {-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1},
            {-1,	-1,	5,	-1,	-1,	4,	-1,	-1,	-1,	-1,	-1},
            {-1,	3,	-1,	-1,	4,	-1,	2,	4,	-1,	-1,	-1},
            {-1,	-1,	-1,	-1,	-1,	2,	-1,	3,	-1,	-1,	-1},
            {-1,	-1,	-1,	-1,	-1,	4,	3,	-1,	4,	1,	-1},
            {-1,	-1,	-1,	-1,	-1,	-1,	-1,	4,	-1,	4,	-1},
            {-1,	6,	-1,	-1,	-1,	-1,	-1,	1,	4,	-1,	-1},
            {-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1}};

    int[][] sw11 ={{-1,	0,	-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1},
            {-1,	-1,	4,	-1,	-1,	3,	-1,	-1,	-1,	6,	0},
            {-1,	4,	-1,	5,	5,	-1,	-1,	-1,	-1,	-1,	-1},
            {-1,	-1,	5,	-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1},
            {-1,	-1,	5,	-1,	-1,	6,	-1,	-1,	-1,	-1,	-1},
            {-1,	3,	-1,	-1,	-1,	-1,	2,	6,	-1,	-1,	-1},
            {-1,	-1,	-1,	-1,	-1,	2,	-1,	3,	-1,	-1,	-1},
            {-1,	-1,	-1,	-1,	-1,	6,	3,	-1,	4,	1,	-1},
            {-1,	-1,	-1,	-1,	-1,	-1,	-1,	4,	-1,	5,	-1},
            {-1,	6,	-1,	-1,	-1,	-1,	-1,	3,	5,	-1,	-1},
            {-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1,	-1}};



    int[][] graph15 = {{0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,0,4,-1,-1,3,-1,-1,-1,6,-1,-1,-1,-1,0},
            {-1,4,0,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,5,-1,0,4,-1,-1,-1,-1,4,-1,-1,-1,-1},
            {-1,3,-1,-1,4,0,2,4,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,2,0,3,-1,-1,3,-1,4,-1,-1},
            {-1,-1,-1,-1,-1,4,3,0,4,1,-1,2,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,4,0,4,-1,5,-1,-1,-1},
            {-1,6,-1,-1,-1,-1,-1,1,4,0,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,4,-1,3,-1,-1,-1,0,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,2,5,-1,-1,0,6,-1,-1},
            {-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,6,0,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0}};

    int[][] sw15 = {{0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,0,6,-1,-1,4,-1,-1,-1,6,-1,-1,-1,-1,0},
            {-1,6,0,5,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,5,-1,0,6,-1,-1,-1,-1,6,-1,-1,-1,-1},
            {-1,4,-1,-1,4,0,2,6,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,2,0,3,-1,-1,5,-1,5,-1,-1},
            {-1,-1,-1,-1,-1,6,3,0,4,3,-1,2,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,4,0,5,-1,5,-1,-1,-1},
            {-1,6,-1,-1,-1,-1,-1,1,5,0,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,6,-1,5,-1,-1,-1,0,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,2,5,-1,-1,0,8,9,-1},
            {-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,8,0,10,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,10,0,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0}};


    int[][] graph20 = {{0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,0,4,-1,-1,3,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,0},
            {-1,4,0,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,5,-1,0,4,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,3,-1,-1,4,0,2,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,2,0,-1,-1,-1,3,-1,4,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,4,-1,0,-1,1,-1,4,3,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,0,5,-1,5,-1,-1,-1,7,-1,5,-1,-1},
            {-1,6,-1,-1,-1,-1,-1,1,5,0,-1,-1,-1,-1,6,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,4,-1,3,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,-1,-1,-1,-1,-1,-1,4,-1},
            {-1,-1,-1,-1,-1,-1,4,3,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,0,4,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,4,0,4,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,6,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,6,0,4,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,4,0,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0}};

    int[][] sw20 = {{0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,0,6,-1,-1,4,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,0},
            {-1,6,0,5,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,5,-1,0,4,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,4,-1,-1,6,0,2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,2,0,-1,-1,-1,5,-1,5,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,6,-1,0,-1,3,-1,6,3,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,5,-1,-1,-1,7,-1,5,-1,-1},
            {-1,7,-1,-1,-1,-1,-1,1,7,0,-1,-1,-1,-1,6,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,6,-1,5,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,-1,7,-1,-1,-1,-1,4,-1},
            {-1,-1,-1,-1,-1,-1,5,3,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,6,0,-1,-1,-1,-1,10,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,0,4,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,4,0,4,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,6,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,6,0,6,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,10,-1,-1,-1,6,0,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0}};

    int[][] graph40 = {{0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,0,4,-1,-1,3,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0},
            {-1,4,0,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,5,-1,0,4,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1},
            {-1,3,-1,-1,4,0,2,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,2,0,-1,-1,-1,3,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1},
            {-1,-1,-1,-1,-1,4,-1,0,-1,1,-1,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,0,5,-1,5,-1,-1,-1,7,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,6,-1,-1,-1,-1,-1,1,5,0,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,4,-1,3,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,4,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,4,3,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,0,4,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,4,0,4,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,6,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,6,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,0,3,-1,-1,-1,4,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,3,0,5,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,5,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,6,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,0,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,0,5,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,0,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,5,0,5,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,0,4,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,3,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,6,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,0,3,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,4,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,4,-1,-1},
            {-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,4,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0}};

    int[][] sw40 = {{0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,0,6,-1,-1,4,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0},
            {-1,6,0,5,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,5,-1,0,4,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1},
            {-1,4,-1,-1,6,0,2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,2,0,-1,-1,-1,5,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1},
            {-1,-1,-1,-1,-1,6,-1,0,-1,3,-1,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,5,-1,-1,-1,7,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,7,-1,-1,-1,-1,-1,1,7,0,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,6,-1,5,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,4,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,-1,7,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,5,3,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,6,0,-1,-1,-1,-1,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,0,4,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,4,0,4,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,6,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,6,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,10,-1,-1,-1,6,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,0,3,-1,-1,-1,4,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,3,0,5,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,5,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,6,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,7,0,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,0,7,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,8,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,5,-1,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,7,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,0,7,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,5,0,7,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,0,5,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,4,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,7,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,0,5,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,6,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,0,4,-1,-1},
            {-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,4,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0}};

    int[][] graph30 = {{0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,0,4,-1,-1,3,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0},
            {-1,4,0,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1},
            {-1,-1,5,-1,0,4,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,3,-1,-1,4,0,2,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,2,0,-1,-1,-1,3,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,4,-1,0,-1,1,-1,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,0,5,-1,5,-1,-1,-1,7,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,6,-1,-1,-1,-1,-1,1,5,0,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,4,-1,3,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,4,3,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,0,4,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,4,0,4,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,6,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,6,0,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,0,3,-1,-1,-1,4,4,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,3,0,5,-1,5,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,5,0,4,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,6,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,6,0,5,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,5,0,-1,-1,4,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,0,5,5,-1,-1},
            {-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,0,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,5,-1,0,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0}};

    int[][] sw30 = {{0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,0,6,-1,-1,4,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0},
            {-1,6,0,5,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,-1,-1,-1},
            {-1,-1,5,-1,0,4,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,4,-1,-1,6,0,2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,2,0,-1,-1,-1,5,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,6,-1,0,-1,3,-1,6,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,0,7,-1,5,-1,-1,-1,7,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,7,-1,-1,-1,-1,-1,1,7,0,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,6,-1,5,-1,-1,-1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,4,5,-1,-1,0,-1,7,-1,-1,-1,-1,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,5,3,-1,-1,-1,-1,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,6,0,-1,-1,-1,-1,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,0,4,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,4,0,4,-1,-1,-1,5,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,6,-1,-1,-1,6,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,7,-1,-1,-1,-1,-1,-1,-1,6,0,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,10,-1,-1,-1,4,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,-1,0,3,-1,-1,-1,4,6,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,-1,-1,-1,3,0,5,-1,5,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,5,0,4,-1,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,0,6,-1,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,6,0,5,-1,-1,-1,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,-1,-1,-1,7,0,-1,-1,4,-1,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,-1,-1,-1,-1,-1,0,7,5,-1,-1},
            {-1,-1,-1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,0,-1,8,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,6,5,-1,0,7,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,7,0,-1},
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0}};


    public static void main(String[] args){
        Main run = new Main("testcase17");

    }
}
